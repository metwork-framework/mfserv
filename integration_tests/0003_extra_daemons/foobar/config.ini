###################################
#####                         #####
#####     GENERAL SECTION     #####
#####                         #####
###################################
# (plugin metadatas)
[general]

# Name of the plugin
# (do not change this, it must coherent with the subdirectory name)
name=foobar

# Version of the plugin (X.Y.Z)
# If the value is {{MODULE_VERSION}},
# the current module version is used
version=0.0.1

# Summary (one line) of the goal of the plugin
summary=one line summary

# License of the plugin
license=Proprietary

# URL of the plugin homepage
url=http://yourpluginhomepage

# Name of the maintainer of the plugin on the form "Firstname FAMILYNAME <email>"
maintainer=Firstname FAMILYNAME <email>

# Vendor of the plugin
vendor=MetWork

# !!! ADVANCED SETTING !!!
# Use this only if you are sure about what you are doing
# extra nginx configuration filename inside your plugin directory
# null => no extra configuration
# The content will be included directly in "server" section
# If you want to include some configuration fragments specific to an app
# don't use this key (in [general] section] but the one in [app_xxxxx] section
# Note: this key is not used with virtualdomain_based_routing
extra_nginx_conf_filename=null

# If you need a redis instance for your plugin for basic needs (no persistence,
# max of 0.5GB of memory), you can set redis_service key to 1.
# To connect to your instance, use an unix socket connection to
# the value of REDIS_SOCKET_UNIX_SOCKET_PATH env var.
redis_service=1


[app_main]

# valid values: gunicorn3_sync, gunicorn2_sync, gunicorn3_asyncio
type=gunicorn3_sync

# number of workers
workers={{MFCOM_HARDWARE_NUMBER_OF_CPU_CORES_MULTIPLIED_BY_2}}

# wsgi function entry point (main arg for gunicorn)

gunicorn_arg=main.wsgi:application


# Use prefix based routing:
# http://{host}:{port}/{plugin_name}/{app_name}/...
# (and/or)
# http://{host}:{port}/{plugin_name}/... if app_name == main or only one app in the plugin
prefix_based_routing=true

# Use virtualdomain based routing
# http://{app_name}.{plugin_name}.{host}:{port}/...
# (and/or)
# http://{plugin_name}.{host}:{port}/... if app_name == main or only one app in the plugin
# NOTE: you need a DNS "catch all" to do that (like a DNS CNAME *.{host} => {ip_of_the_host}
virtualdomain_based_routing=false

# Route directly at the webserver part /static/ url path to static directory
# inside the application directory
static_routing=true

# !!! ADVANCED SETTING !!!
# use this only if you are sure about what you are doing
# extra nginx configuration filename inside your plugin directory
# null => no extra configuration
# the content will be included directly in your app "location" section
# if you want to include some configuration fragments at a more general level
# don't use this key but the one in [general] section)
# Note: if you use virtualdomain_based_routing, the content will be included
# in the custom "server" section (specific to your app and not in "location")
extra_nginx_conf_filename=null

# !!! ADVANCED SETTING !!!
# use this only if you are sure about what you are doing
# extra nginx configuration filename inside your plugin directory
# null => no extra configuration
# the content will be included directly in your app "location" section for
# the "static" routing part (see also extra_nginx_conf_filename key for
# the "dynamic" part)
# if you want to include some configuration fragments at a more general level
# don't use this key but the one in [general] section)
extra_nginx_conf_static_filename=null

# If true, add plugin directory to python path
add_plugin_dir_to_python_path=true

# If true, add app directory to python path
add_app_dir_to_python_path=false


[extra_daemon_foo]
cmd_and_args = daemon.sh foobar
numprocesses=1
