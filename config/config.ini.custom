{% extends "config.ini" %}

{% block custom %}
{% raw -%}
#################
##### NGINX #####
#################
[nginx]

# Port of nginx daemon
# IMPORTANT: this is the main port of the mfserv module
# Note: as metwork does not run as root user, you CAN'T use here a value < 1024
port=18868

# Max body size for incoming http requests (in MB)
upload_max_body_size=100

# Number of nginx workers
# (the {{MFCOM_HARDWARE_NUMBER_OF_CPU_CORES_MULTIPLIED_BY_2}} special values
#  is probably a good start)
workers={{MFCOM_HARDWARE_NUMBER_OF_CPU_CORES_MULTIPLIED_BY_2}}

# Default timeout (in seconds)
# You can override this in plugin config.ini
timeout=60

# If logging=0, do not log anything in nginx_access.log
logging=1

# In which tmp directory nginx put big request bodies
clientbody_temp_path=@@@MFMODULE_RUNTIME_HOME@@@/var/nginx2

# If flag=0, do not start nginx (can be useful in very special use cases)
flag=1

# If add_request_id_header=1 (default), we add the "X-Request-Id" header in
# the response to the client
add_request_id_header=1

# If add_x_forwarded_headers=1 (default), we add "X-Forwarded-*" headers
# (and X-Real-Ip also)
add_x_forwarded_headers=1

# Advanced settings, change this only if you are sure what you are doing
# healthcheck endpoint for mfserv (useful only if you have a loadbalancer
#                                  before mfserv)
# null => no healthcheck endpoint
# the endpoint returns HTTP/200 with body: OK if the module is RUNNING
# correctly, else HTTP/503
health_location = /__health

# Advanced settings, change this only if you are sure what you are doing
# You can introduce a >0 value here to introduce a delay at the very beginning
# of mfserv stop process to be sure that a possible loadbalancer before mfserv
# detects the shutdown process (with healthcheck) before really stopping
# mfserv module. The value to used depends on the frequency of configured
# healthchecks (on your load balancer)
smart_stop_delay=0

# Advanced settings, change this only if you are sure what you are doing
# You can introduce a >0 value here to introduce a delay at the end of mfserv
# start process to be sure everything is ready before changing healthcheck to
# OK. It can be used to avoid that a loadbalancer before mfserv sends requests
# prematurely to this module.
smart_start_delay=0

# Advanced settings
# Determines whether the connection with a plugin should be
# closed when a client closes the connection without waiting for a response.
# See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_client_abort
proxy_ignore_client_abort=1

# If your mfserv is behing a reverse proxy, you will loose the real client ip
# in your logs. With these advanced parameters, you can configure
# http://nginx.org/en/docs/http/ngx_http_realip_module.html nginx module
# (set to 1 to activate)
real_ip=0

# see http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_recursive
# (1 => on, 0 => off)
real_ip_recursive=1

# Defines the request header field whose value will be used to replace
# the client address.
# see http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header
real_ip_header=X-Forwarded-For

# Coma separated trusted addresses that are known to send correct replacement addresses.
# see http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from
# (null value means no trusted addresses)
real_ip_set_from=172.16.0.0/12,192.168.0.0/16,10.0.0.0/8

# Enables or disables emitting nginx version on error pages and
# in the "Server" response header field.
# (1 => enabled, 0 => disabled)
server_tokens=1


###################
##### PLUGINS #####
###################
[internal_plugins]

# if install_welcome=1, install the welcome plugin during init
install_welcome=1


##################
##### CIRCUS #####
##################
[circus]

# Advanced settings, you shouldn't change this
endpoint=ipc://@@@MFMODULE_RUNTIME_HOME@@@/var/circus.socket

# Advanced settings, you shouldn't change this
pubsub_endpoint=ipc://@@@MFMODULE_RUNTIME_HOME@@@/var/circus_pubsub.socket


####################
##### TELEGRAF #####
####################
[telegraf]

# Telegraf statsd port (on this host)
# Change this if it's already used
statsd_port=18127

# if debug=1, put telegraf in trace mode (WARNING: produce a lot of logs)
debug=0
{% endraw %}
{% endblock %}
