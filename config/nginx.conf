# General Configuration
daemon off;
worker_processes {{MFSERV_NGINX_WORKERS}};
{% if MFSERV_LOG_DEFAULT_LEVEL == "DEBUG" or MFSERV_LOG_DEFAULT_LEVEL == "NOTSET" %}
error_log  {{MODULE_RUNTIME_HOME}}/log/nginx_error.log debug;
{% else %}
error_log  {{MODULE_RUNTIME_HOME}}/log/nginx_error.log error;
{% endif %}
pid        {{MODULE_RUNTIME_HOME}}/var/nginx.pid;

# Main Loop Configuration
events {
    worker_connections  10000;
}

# HTTP Configuration
http {

    include       mime.types;
    default_type  text/plain;
    log_format  main  '[$time_local] from=$remote_addr request="$request" duration=$request_time status=$status reqlen=$request_length replen=$body_bytes_sent';
    access_log  {{MODULE_RUNTIME_HOME}}/log/nginx_access.log  main;
    client_body_temp_path {{MFSERV_NGINX_CLIENTBODY_TEMP_PATH}};
    client_max_body_size {{MFSERV_NGINX_UPLOAD_MAX_BODY_SIZE}}m;
    server_names_hash_bucket_size 1024;
    server_names_hash_max_size 1024;

    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $proxy_connection;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
    proxy_set_header X-Forwarded-Path $request_uri;

    lua_package_path '{{LUA_PACKAGE_PATH}}';
    lua_code_cache on;

    {% if MFSERV_ADMIN_HOSTNAME != "null" %}
        init_worker_by_lua_block {
            local stats = require("stats")
            stats.init({host="127.0.0.1", port={{MFSERV_TELEGRAF_STATSD_PORT}}, delay=10})
        }
    {% endif %}

    # If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
    # # scheme used to connect to this server
    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    # If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
    # # Connection header that may have been passed to this server
    map $http_upgrade $proxy_connection {
        default upgrade;
        ''      close;
    }

    server {

        {% if MFSERV_NGINX_PORT != "0" %}
        listen {{MFSERV_NGINX_PORT}} backlog=40000 default_server;
        {% endif %}
        server_name 127.0.0.1;

        location ~ ^/status$ {
            allow 127.0.0.1/24;
            deny all;
            stub_status on;
            access_log off;
        }

        location ~ ^/uuid$ {
            allow 127.0.0.1/24;
            deny all;
            echo "{{UUID}}";
            access_log off;
        }

        {% for PLUGIN in PLUGINS %}
            {% if PLUGIN.extra_general_nginx_conf_string %}
                ##### BEGIN OF GENERAL EXTRA NGINX CONF FOR PLUGIN {{PLUGIN.name}} #####
                {{PLUGIN.extra_general_nginx_conf_string}}
                ##### END OF GENERAL EXTRA NGINX CONF FOR PLUGIN {{PLUGIN.name}} #####
            {% endif %}
        {% endfor %}

        {% for PLUGIN in PLUGINS %}
            {% for APP in PLUGIN.apps %}
                {% if APP.prefix_based_routing %}
                    {% for PREFIX in APP.prefixes %}
                        {% if APP.type != "static" %}
                            {% if APP.static_routing %}
                                location ~ ^{{PREFIX}}/static/(.*)$ {
                                    alias {{APP.workdir}}/static/$1;
                                    {% if APP.extra_nginx_conf_static_string %}
                                        ##### BEGIN OF PLUGIN EXTRA NGINX CONF (STATIC) FOR APP {{APP.name}} #####
                                        {{APP.extra_nginx_conf_static_string}}
                                        ##### END OF PLUGIN EXTRA NGINX CONF (STATIC) FOR APP {{APP.name}} #####
                                    {% endif %}
                                    {% if MFSERV_ADMIN_HOSTNAME != "null" %}
                                        log_by_lua_block {
                                            local stats = require("stats")
                                            stats.send_status_code_stat("request_counter", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                            stats.send_timing_stat("request_timer", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                        }
                                    {% endif %}
                                }
                            {% endif %}

                            location ~ ^{{PREFIX}}/ {
                                proxy_pass http://unix:{{APP.socket}};
                                {% if APP.extra_nginx_conf_string %}
                                    ##### BEGIN OF PLUGIN EXTRA NGINX CONF (DYNAMIC) FOR APP {{APP.name}} #####
                                    {{APP.extra_nginx_conf_string}}
                                    ##### END OF PLUGIN EXTRA NGINX CONF (DYNAMIC) FOR APP {{APP.name}} #####
                                {% endif %}
                                {% if MFSERV_ADMIN_HOSTNAME != "null" %}
                                    log_by_lua_block {
                                        local stats = require("stats")
                                        stats.send_status_code_stat("request_counter", "{{PLUGIN.name}}", "{{APP.app_name}}", "dynamic")
                                        stats.send_timing_stat("request_timer", "{{PLUGIN.name}}", "{{APP.app_name}}", "dynamic")
                                    }
                                {% endif %}
                            }

                            location = {{PREFIX}} {
                                proxy_pass http://unix:{{APP.socket}};
                                {% if APP.extra_nginx_conf_string %}
                                    ##### BEGIN OF PLUGIN EXTRA NGINX CONF (DYNAMIC) FOR APP {{APP.name}} #####
                                    {{APP.extra_nginx_conf_string}}
                                    ##### END OF PLUGIN EXTRA NGINX CONF (DYNAMIC) FOR APP {{APP.name}} #####
                                {% endif %}
                                {% if MFSERV_ADMIN_HOSTNAME != "null" %}
                                    log_by_lua_block {
                                        local stats = require("stats")
                                        stats.send_status_code_stat("request_counter", "{{PLUGIN.name}}", "{{APP.app_name}}", "dynamic")
                                        stats.send_timing_stat("request_timer", "{{PLUGIN.name}}", "{{APP.app_name}}", "dynamic")
                                    }
                                {% endif %}
                            }
                        {% else %}
                            location ~ ^{{PREFIX}}/(.*)$ {
                                alias {{APP.workdir}}/$1;
                                {% if APP.extra_nginx_conf_string %}
                                    ##### BEGIN OF PLUGIN EXTRA NGINX CONF FOR APP {{APP.name}} #####
                                    {{APP.extra_nginx_conf_string}}
                                    ##### END OF PLUGIN EXTRA NGINX CONF FOR APP {{APP.name}} #####
                                {% endif %}
                                {% if MFSERV_ADMIN_HOSTNAME != "null" %}
                                    log_by_lua_block {
                                        local stats = require("stats")
                                        stats.send_status_code_stat("request_counter", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                        stats.send_timing_stat("request_timer", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                    }
                                {% endif %}
                            }
                            location = {{PREFIX}} {
                                alias {{APP.workdir}}/;
                                {% if APP.extra_nginx_conf_string %}
                                    ##### BEGIN OF PLUGIN EXTRA NGINX CONF FOR APP {{APP.name}} #####
                                    {{APP.extra_nginx_conf_string}}
                                    ##### END OF PLUGIN EXTRA NGINX CONF FOR APP {{APP.name}} #####
                                {% endif %}
                                {% if MFSERV_ADMIN_HOSTNAME != "null" %}
                                    log_by_lua_block {
                                        local stats = require("stats")
                                        stats.send_status_code_stat("request_counter", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                        stats.send_timing_stat("request_timer", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                    }
                                {% endif %}
                            }
                        {% endif %}

                    {% endfor %}
                {% endif %}
            {% endfor %}
        {% endfor %}

    }

    {% for PLUGIN in PLUGINS %}
        {% for APP in PLUGIN.apps %}
            {% if APP.virtualdomain_based_routing %}
                server {
                    server_name {{ APP.virtualdomains|join(" ") }};
                    listen {{MFSERV_NGINX_PORT}};
                    {% if APP.extra_nginx_conf_string %}
                        ##### BEGIN OF PLUGIN EXTRA NGINX CONF (DYNAMIC) FOR APP {{APP.name}} #####
                        {{APP.extra_nginx_conf_string}}
                        ##### END OF PLUGIN EXTRA NGINX CONF (DYNAMIC) FOR APP {{APP.name}} #####
                    {% endif %}

                    {% if APP.type != "static" %}
                        {% if APP.static_routing %}
                            location /static/ {
                                {% if APP.extra_nginx_conf_static_string %}
                                    ##### BEGIN OF PLUGIN EXTRA NGINX CONF (STATIC) FOR APP {{APP.name}} #####
                                    {{APP.extra_nginx_conf_static_string}}
                                    ##### END OF PLUGIN EXTRA NGINX CONF (STATIC) FOR APP {{APP.name}} #####
                                {% endif %}
                                alias {{APP.workdir}}/static/;
                                {% if MFSERV_ADMIN_HOSTNAME != "null" %}
                                    log_by_lua_block {
                                        local stats = require("stats")
                                        stats.send_status_code_stat("request_counter", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                        stats.send_timing_stat("request_timer", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                    }
                                {% endif %}
                            }
                        {% endif %}

                        location / {
                            proxy_pass http://unix:{{APP.socket}};
                            {% if MFSERV_ADMIN_HOSTNAME != "null" %}
                                log_by_lua_block {
                                    local stats = require("stats")
                                    stats.send_status_code_stat("request_counter", "{{PLUGIN.name}}", "{{APP.app_name}}", "dynamic")
                                    stats.send_timing_stat("request_timer", "{{PLUGIN.name}}", "{{APP.app_name}}", "dynamic")
                                }
                            {% endif %}
                        }
                    {% else %}
                        location ~ /(.*)$ {
                            alias {{APP.workdir}}/$1;
                            {% if APP.extra_nginx_conf_static_string %}
                                ##### BEGIN OF PLUGIN EXTRA NGINX CONF FOR APP {{APP.name}} #####
                                {{APP.extra_nginx_conf_static_string}}
                                ##### END OF PLUGIN EXTRA NGINX CONF FOR APP {{APP.name}} #####
                            {% endif %}
                            {% if MFSERV_ADMIN_HOSTNAME != "null" %}
                                log_by_lua_block {
                                    local stats = require("stats")
                                    stats.send_status_code_stat("request_counter", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                    stats.send_timing_stat("request_timer", "{{PLUGIN.name}}", "{{APP.app_name}}", "static")
                                }
                            {% endif %}
                        }
                    {% endif %}
                }

            {% endif %}
        {% endfor %}
    {% endfor %}

}
