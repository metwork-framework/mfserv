#!/usr/bin/env python3

import sys
from mfplugin.manager import PluginsManager
from mfplugin.utils import NotInstalledPlugin, BadPlugin
from mfutil.cli import echo_bold


manager = PluginsManager()
try:
    plugin = manager.get_plugin(sys.argv[1])
except NotInstalledPlugin:
    echo_bold("ERROR: not installed plugin: %s" % sys.argv[1])
    sys.exit(1)
try:
    plugin.load_full()
except BadPlugin:
    echo_bold("ERROR: bad plugin exception (bad configuration?)")
    sys.exit(1)

plugin_home = plugin.home
plugin_name = plugin.name
dangerous = False
for option in ("extra_nginx_conf_filename",
               "extra_nginx_http_conf_filename",
               "extra_nginx_server_conf_filename",
               "extra_nginx_init_worker_by_lua_block_filename"):
    tmp = getattr(plugin.configuration, option).strip()
    if tmp != "":
        print("WARNING: this plugin has a non empty %s key" % option)
        dangerous = True
        break

for app in plugin.configuration.apps:
    if app.debug:
        print("WARNING: this plugin has a debug == 1 setting for the "
              "app: %s" % app.name)
        dangerous = True
    tmp = app.prefix_based_routing_extra_routes.strip()
    if tmp != "":
        print("WARNING: this plugin has a "
              "prefix_based_routing_extra_routes == %s (!= null) "
              "for the app: %s" % (tmp, app))
        dangerous = True
if dangerous:
    print("  => This is a dangerous plugin which can break the whole")
    print("     mfserv module")
    print("  => But it can be assumed if you trust the author")
